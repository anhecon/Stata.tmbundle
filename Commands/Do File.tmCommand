<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>beforeRunningCommand</key>
	<string>saveActiveFile</string>
	<key>command</key>
	<string>#!/usr/bin/env bash
[[ -f "${TM_SUPPORT_PATH}/lib/bash_init.sh" ]] &amp;&amp; . "${TM_SUPPORT_PATH}/lib/bash_init.sh"

STATA=$(defaults read "$TM_APP_IDENTIFIER" stataBundleIdentifier 2&gt;/dev/null)
if [ ! -n "$STATA" ]
then
    STATA=$("${TM_BUNDLE_SUPPORT}/bin/locate_stata.py")
    if [ ! -n "$STATA" ]
    then
        exit
    fi
fi

USE_PDIR=$(defaults read "$TM_APP_IDENTIFIER" stataDoFromProjectDirectory 2&gt;/dev/null)
if [ "$USE_PDIR" = "1" ] &amp;&amp; [ -n "$TM_PROJECT_DIRECTORY" ]
then
    WD="$TM_PROJECT_DIRECTORY"
else
    WD="$TM_DIRECTORY"
fi

# N.B. if Stata transitions to UTF-8 input, then we can drop this overhead
DECODE=false
ENCODING=$(file --mime-encoding --brief "$TM_FILEPATH")
if [ ! "$ENCODING" = "us-ascii" ] &amp;&amp; [[ "$ENCODING" != unknown* ]] &amp;&amp; [ -n "$ENCODING" ]
then
    DECODE=true
fi

if $DECODE || [ "$USE_PDIR" = "1" -a "$WD" != "$TM_DIRECTORY" ]
then
    TMPFILE="$WD/.tm-stata-$$.do"
    if [ ! -e "$TMPFILE" ]
    then
        if $DECODE
        then
            # translate to MACROMAN encoding
            iconv -f $ENCODING -t MACROMAN "$TM_FILEPATH" &gt; "$TMPFILE" || cp "$TM_FILEPATH" "$TMPFILE"
        else
            cp "$TM_FILEPATH" "$TMPFILE"
        fi
        open -b "$STATA" -g "$TMPFILE"
        sleep 0.5
        rm "$TMPFILE"
    else
        echo "Can't create temporary file $TMPFILE (already exists)"
    fi
else
    open -b "$STATA" -g "$TM_FILEPATH"
fi
</string>
	<key>input</key>
	<string>none</string>
	<key>inputFormat</key>
	<string>text</string>
	<key>keyEquivalent</key>
	<string>@r</string>
	<key>name</key>
	<string>Do File</string>
	<key>outputCaret</key>
	<string>afterOutput</string>
	<key>outputFormat</key>
	<string>text</string>
	<key>outputLocation</key>
	<string>toolTip</string>
	<key>scope</key>
	<string>source.stata</string>
	<key>uuid</key>
	<string>B1E8AA7A-171E-4E0B-B254-79D9AD936032</string>
	<key>version</key>
	<integer>2</integer>
</dict>
</plist>
